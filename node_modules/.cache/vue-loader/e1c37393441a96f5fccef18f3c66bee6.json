{"remainingRequest":"C:\\Users\\kikis\\Documents\\kryptobet\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\kikis\\Documents\\kryptobet\\src\\views\\Isobet\\Desktop\\Wallet\\components\\deposit.vue?vue&type=template&id=5ebe602e&","dependencies":[{"path":"C:\\Users\\kikis\\Documents\\kryptobet\\src\\views\\Isobet\\Desktop\\Wallet\\components\\deposit.vue","mtime":1642470647582},{"path":"C:\\Users\\kikis\\Documents\\kryptobet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644485493295},{"path":"C:\\Users\\kikis\\Documents\\kryptobet\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1644485502309},{"path":"C:\\Users\\kikis\\Documents\\kryptobet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1644485493295},{"path":"C:\\Users\\kikis\\Documents\\kryptobet\\node_modules\\vue-loader\\lib\\index.js","mtime":1644485499914}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}